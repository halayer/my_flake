# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ ];

  boot.initrd.availableKernelModules = [ "ata_piix" "ohci_pci" "ehci_pci" "ahci" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  # fileSystems."/" =
  #   { device = "/dev/disk/by-uuid/d2e2324b-4758-46a7-ada0-4c6fc77a135a";
  #     fsType = "btrfs";
  #     options = [ "subvol=@" ];
  #   };

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/2ea0e9c7-e5f9-4e18-9ba9-70afd31dcaff";

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/d2e2324b-4758-46a7-ada0-4c6fc77a135a";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/2AC2-746F";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/6a1821d6-88d1-4687-b903-82aa28cf96d5"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  virtualisation.virtualbox.guest.enable = true;

  # Eigens getaetigte Aenderungen
  hardware.graphics = {
    enable = true;
    enable32Bit = true;
  };
}
